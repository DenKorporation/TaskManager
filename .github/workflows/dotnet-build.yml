name: .NET Build, Test, Coverage & SonarCloud

on:
  push:
    branches: [ "**" ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore server/TaskManager.sln

      # ---------- SonarCloud Begin ----------
      - name: Begin SonarCloud analysis
        if: github.ref_name == 'main'
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin \
            /k:"denkorporation_taskmanager" \
            /o:"denkorporation" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.cs.opencover.reportsPaths="TestResults/*/coverage.cobertura.xml"

      - name: Build solution
        run: dotnet build server/TaskManager.sln --configuration Release --no-restore

      - name: Run tests with coverage
        if: github.ref_name == 'main'
        run: |
          mkdir -p TestResults

          TEST_PROJECTS=( $(find server/tests -name '*.csproj') )
          
          for proj in "${TEST_PROJECTS[@]}"
          do
            echo "Running tests for $proj"
            dotnet test "$proj" --configuration Release --no-build \
              /p:CollectCoverage=true \
              /p:CoverletOutput="$PWD/TestResults/$(basename $proj)/" \
              /p:CoverletOutputFormat=cobertura
          done

      - name: Generate coverage report
        if: github.ref_name == 'main'
        run: |
          if compgen -G "TestResults/*/coverage.cobertura.xml" > /dev/null; then
            echo "Generating coverage report..."
            dotnet tool install --global dotnet-reportgenerator-globaltool
            reportgenerator -reports:"TestResults/*/coverage.cobertura.xml" -targetdir:"TestResults/Report" -reporttypes:HtmlSummary,Cobertura
          else
            echo "No coverage reports found, skipping report generation."
          fi

      - name: Upload coverage report
        if: github.ref_name == 'main'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: TestResults/Report

      - name: Upload coverage to Codecov
        if: github.ref_name == 'main'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: TestResults/Report/*.xml
          fail_ci_if_error: false

      # ---------- SonarCloud End ----------
      - name: End SonarCloud analysis
        if: github.ref_name == 'main'
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      # --------------------------------------